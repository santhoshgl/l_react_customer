workflows:
  build-apk-android-dev:
    name: build android apk for dev environment
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - android-customers-app
      vars:
        KEYSTORE_PATH: /tmp/.keystore
        APP_ENV: dev
      node: 16.14.2
    scripts:
      - &setup_sops_and_svc_acct_pre_prod
        name: setup sops and service account
        script: |
          brew install sops
          echo $SERVICE_ACCOUNT_PRE_PROD > /tmp/svc-acct.json
      - &setup_env_var_pre_prod
        name: Setup environment variables
        script: |
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/svc-acct.json
          sops -d $CM_BUILD_DIR/docker/env.dev > $CM_BUILD_DIR/.env
      - &install_node_modules
        name: Install dependencies
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Set up debug key.properties
        script: |
          rm -rf ~/.android/debug.keystore
          keytool -genkeypair \
            -alias androiddebugkey \
            -keypass android \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -dname 'CN=Android Debug,O=Android,C=US' \
            -keyalg 'RSA' \
            -keysize 2048 \
            -validity 10000
      - name: Setup keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $KEYSTORE_PATH
          cat > $CM_BUILD_DIR/android/key.properties <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=$KEYSTORE_PATH
          EOF
      - name: Build Android apk
        script: |
          cd $CM_BUILD_DIR/android
          cp $CM_BUILD_DIR/docker/build.gradle $CM_BUILD_DIR/android/app/build.gradle
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
          chmod +x gradlew && ./gradlew clean
          ./gradlew assembleRelease
      - name: Rename artifact
        script: |
          mv $CM_BUILD_DIR/android/app/build/outputs/apk/release/*.apk $CM_BUILD_DIR/android/app/build/outputs/apk/release/lealzy-android-dev-$BUILD_NUMBER.apk
    artifacts:
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          -  sajid.qureshi@project10k.com
        notify:
          success: true
          failure: true
      slack:
        channel: '#p-lealzy'
        notify:
          success: true
          failure: true

  build-ios-ipa-dev:
    name: build ios ipa for dev environment
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - android-customers-app
        - ios-customers-app
      vars:
        # Ionic Xcode worskspace and scheme
        XCODE_WORKSPACE: 'ios/lealzy.xcworkspace'
        XCODE_SCHEME: 'lealzy'
        APP_STORE_APP_ID: 1570827873
      node: 16.14.2
      xcode: latest
      cocoapods: default
    scripts:
      - *setup_sops_and_svc_acct_pre_prod
      - *setup_env_var_pre_prod
      - *install_node_modules
      - name: Cocoapods installation
        script: |
          cd ios && pod install
      - name: Set up keychain to be used for codesigning
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files com.lealzy.customer --type IOS_APP_STORE --create
      - name: Add certificates to keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
            #!/bin/sh
            set -e
            set -x
            cd $CM_BUILD_DIR/ios
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
      slack:
        channel: '#p-lealzy'
        notify:
          success: true
          failure: true

  build-apk-android-prod:
    name: build android apk for prod environment
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - prod-creds
        - android-customers-app
        - android
      vars:
        KEYSTORE_PATH: /tmp/.keystore
        APP_ENV: dev
      node: 16.14.2
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: 'android-prod-*'
          include: true
        - pattern: 'all-prod-*'
          include: true
      cancel_previous_builds: true
    scripts:
      - &setup_sops_and_svc_acct_prod
        name: setup sops and service account
        script: |
          brew install sops
          echo $SERVICE_ACCOUNT_PROD > /tmp/svc-acct.json
      - name: Setup google-service json for prod
        script: |
          cp $CM_BUILD_DIR/docker/android/google-services.json $CM_BUILD_DIR/android/app/google-services.json
      - &setup_env_var_prod
        name: Setup environment variables
        script: |
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/svc-acct.json
          sops -d $CM_BUILD_DIR/docker/env.production > $CM_BUILD_DIR/.env
      - *install_node_modules
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Set up debug key.properties
        script: |
          rm -rf ~/.android/debug.keystore
          keytool -genkeypair \
            -alias androiddebugkey \
            -keypass android \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -dname 'CN=Android Debug,O=Android,C=US' \
            -keyalg 'RSA' \
            -keysize 2048 \
            -validity 10000
      - name: Setup keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $KEYSTORE_PATH
          cat > $CM_BUILD_DIR/android/key.properties <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=$KEYSTORE_PATH
          EOF
      - name: Build Android apk
        script: |
          cd $CM_BUILD_DIR/android
          export GIT_TAG_VERSION=`echo $FCI_TAG | cut -f3 -d'-'`
          cp $CM_BUILD_DIR/docker/build.gradle $CM_BUILD_DIR/android/app/build.gradle
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
          chmod +x gradlew && ./gradlew clean
          ./gradlew assembleRelease
          ./gradlew bundleRelease
      - name: Rename artifact
        script: |
          mv $CM_BUILD_DIR/android/app/build/outputs/apk/release/*.apk $CM_BUILD_DIR/android/app/build/outputs/apk/release/lealzy-android-prod-$BUILD_NUMBER.apk
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
    publishing:
      # google_play:
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: internal
      email:
        recipients:
          -  sajid.qureshi@project10k.com
        notify:
          success: true
          failure: true
      slack:
        channel: '#p-lealzy'
        notify:
          success: true
          failure: true

  build-ios-ipa-prod:
    name: build ios ipa for prod environment
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - prod-creds
        - ios-customers-app
      vars:
        # Ionic Xcode worskspace and scheme
        XCODE_WORKSPACE: 'ios/lealzy.xcworkspace'
        XCODE_SCHEME: 'lealzy'
        APP_STORE_APP_ID: 1570827873
      node: 16.14.2
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - tag
      cancel_previous_builds: true
      tag_patterns:
        - pattern: 'ios-prod-*'
          include: true
        - pattern: 'all-prod-*'
          include: true
    scripts:
      - *setup_sops_and_svc_acct_prod
      - *setup_env_var_prod
      - *install_node_modules
      - name: Copy firebase google services files
        script: |
          cp $CM_BUILD_DIR/docker/ios/GoogleService-Info.plist $CM_BUILD_DIR/ios/GoogleService-Info.plist
      - name: Cocoapods installation
        script: |
          cd ios && pod install
      - name: Set up keychain to be used for codesigning
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files com.lealzy.customer --type IOS_APP_STORE --create
      - name: Add certificates to keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
            #!/bin/sh
            set -e
            set -x
            export GIT_TAG_VERSION=`echo $FCI_TAG | cut -f3 -d'-'`
            cd $CM_BUILD_DIR/ios
            agvtool new-marketing-version $GIT_TAG_VERSION
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
      slack:
        channel: '#p-lealzy'
        notify:
          success: true
          failure: true

